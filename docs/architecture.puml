@startuml GCP Cost Agent Architecture
!theme plain
title GCP Cost Agent - System Architecture

actor User
participant "Frontend (React)" as Frontend
participant "FastAPI Backend" as Backend
participant "MCP Toolbox (ADK)" as Toolbox
participant "BigQuery (Billing Data)" as BigQuery
participant "Google Cloud (Cloud Run)" as CloudRun

== Local Development Flow ==

User -> Frontend: Ask cost question
Frontend -> Backend: POST /chat with question and session_id
Backend -> Backend: Parse intent with LLM (costs, trends, comparison)
Backend -> Toolbox: Call MCP tool (get_monthly_cost_summary)
Toolbox -> BigQuery: Execute SQL query
BigQuery -> Toolbox: Return billing data
Toolbox -> Backend: Structured response
Backend -> Backend: Process and format data, Generate insights
Backend -> Frontend: JSON response with answer and data
Frontend -> User: Display formatted results

== Cloud Run Deployment Flow ==

note over CloudRun: Containerized deployment
User -> CloudRun: HTTP request
CloudRun -> Backend: Route to FastAPI
Backend -> Toolbox: Call MCP tools
Toolbox -> BigQuery: Query billing data
BigQuery -> Toolbox: Return results
Toolbox -> Backend: Processed data
Backend -> CloudRun: Response
CloudRun -> User: HTTP response

== Advanced Analytics Flow ==

User -> Frontend: Complex query about anomalies
Frontend -> Backend: POST /chat
Backend -> Backend: LLM intent analysis (anomaly detection)
Backend -> Toolbox: Multiple tool calls (get_cost_trends, get_anomalies)
Toolbox -> BigQuery: Complex SQL queries
BigQuery -> Toolbox: Historical data
Toolbox -> Backend: Analytics results
Backend -> Backend: Generate insights with LLM assistance
Backend -> Frontend: Detailed analysis
Frontend -> User: Visualized results

== Error Handling Flow ==

User -> Frontend: Invalid query
Frontend -> Backend: POST /chat
Backend -> Backend: Intent recognition (unknown intent)
Backend -> Frontend: Error message
Frontend -> User: Helpful error message

@enduml